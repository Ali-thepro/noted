image: golang:1.23.1

stages:
  - lint
  - build
  - test

cache:
  key: gocache
  paths:
    - go/pkg/mod/
    - go/bin/
    - go/cache/
    - go/linter-cache/

variables:
  GOCACHE: ${CI_PROJECT_DIR}/go/cache
  GOPATH: ${CI_PROJECT_DIR}/go
  GOLANGCI_LINT_CACHE: ${CI_PROJECT_DIR}/go/linter-cache

before_script:
  - cd code/client
  - mkdir -p "${GOPATH}/bin"
  - mkdir -p "${GOCACHE}"
  - go mod download
  - go mod tidy

lint:
  stage: lint
  image: golangci/golangci-lint:latest-alpine
  script:
    - golangci-lint run --timeout=5m
    - go fmt ./...
    - go vet ./...

build:
  stage: build
  script: 
    - make build
    - test -x noted

.test:
  stage: test
  script:
    - make test
    - "go tool cover -func coverage.out | sed -n -e '/^total/s/:.*statements)[^0-9]*/: /p' > coverage.txt"
    - go get github.com/boumenot/gocover-cobertura
    - go run github.com/boumenot/gocover-cobertura < coverage.out > cobertura.xml
    - go install github.com/jstemmer/go-junit-report/v2@latest
    - go test -v 2>&1 ./... | $GOPATH/bin/go-junit-report -set-exit-code > report.xml
  cache:
    - key: "$CI_COMMIT_REF_SLUG-reports"
      paths:
        - code/client/report.xml
        - code/client/coverage.txt
        - code/client/cobertura.xml
